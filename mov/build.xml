<!-- Venice Build File -->
<project name="Venice" default="run" basedir=".">

  <!-- Current version we are working towards -->
  <property name="VERSION" value="0.7beta"/>

  <!-- Paths -->
  <property name="api" value="${basedir}/api"/>
  <property name="backup" value="${basedir}/backup"/>
  <property name="doc" value="${basedir}/doc"/>
  <property name="release" value="${basedir}/release"/>
  <property name="report" value="${basedir}/report"/>
  <property name="src" value="${basedir}/src"/>
  <property name="lib" value="${basedir}/lib"/>
  <property name="temp" value="${basedir}/temp"/>
  <property name="test" value="${basedir}/test"/>
  <property name="web" value="${basedir}/web"/>

  <!-- Libraries -->
  <property name="lib.hsql" value="${lib}/hsqldb.jar"/>
  <property name="lib.joone" value="${lib}/joone-engine.jar"/>
  <property name="lib.jython" value="${lib}/jython.jar"/>
  <property name="lib.mysql" value="${lib}/mysql-connector-java-3.1.12-bin.jar"/>
  <property name="lib.xml" value="${lib}/xstream-1.1.2.jar"/>

  <!-- Online help -->
  <property name="help" value="${src}/org/mov/help/doc"/>

  <!-- Generate API documentation -->
  <target name="api">
    <javadoc packagenames="org.mov.*"
             sourcepath="${src}"
	     source="1.4"
             destdir="${api}"
             additionalparam="-breakiterator"
	     windowtitle="Venice ${VERSION}">
      <header><![CDATA[<b>Venice ${VERSION}</b>]]></header>
      <footer><![CDATA[<b>Venice ${VERSION}</b>]]></footer>
      <doctitle>Venice ${VERSION}</doctitle>
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${src}"/>
        <pathelement path="${lib.hsql}"/>
        <pathelement path="${lib.mysql}"/>
        <pathelement path="${lib.joone}"/>
        <pathelement path="${lib.jython}"/>
        <pathelement path="${lib.xml}"/>
      </classpath>
  </javadoc>
  </target>

  <!-- Get a backup of the CVS tree from sourceforge -->
  <target name="backup">
    <tstamp>
      <format property="today" pattern="ddmmyyyy"/>
    </tstamp>
    <mkdir dir="${backup}"/>
    <get src="http://cvs.sourceforge.net/cvstarballs/mov-cvsroot.tar.bz2"
         dest="${backup}/backup-${today}.tar.bz2"
	 verbose="true"/>
  </target>

  <!-- Build venice -->
  <target name="build">
    <javac srcdir="${src}"
	   debug="on"
  	   optimize="on"
	   source="1.4"
	   includes="**/*.java"
           excludes="org/mov/tools/*">
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${src}"/>
        <pathelement path="${lib.hsql}"/>
        <pathelement path="${lib.mysql}"/>
        <pathelement path="${lib.joone}"/>
        <pathelement path="${lib.jython}"/>
        <pathelement path="${lib.xml}"/>
      </classpath>
    </javac>
  </target>

  <!-- Remove all built files -->
  <target name="clean">
    <delete>
      <fileset dir="${src}" includes="**/*.class"/>
    </delete>
    <delete>
      <fileset dir="${test}" includes="**/*.class"/>
    </delete>
    <delete file="venice.jar"/>
    <delete dir="${api}"/>
    <delete file="${doc}/manual.html"/>
    <delete file="${doc}/manual.txt"/>
    <delete dir="${release}"/>
    <delete dir="${temp}"/>
    <delete>
      <fileset dir="${help}" includes="*.html"/>
    </delete>
    <delete file="${help}/index.xml"/>
    <delete file="${web}/web.tar"/>
    <delete file="${web}/web.tar.gz"/>
    <delete file="${web}/manual.html"/>
    <delete dir="${web}/api"/>
    <delete dir="${web}/report"/>
  </target>

  <!-- Generate docs -->
  <target name="doc">
    <xmlcatalog id="document">
      <dtd publicID="-//Venice//DTD XML Document V1.0//EN"
           location="${doc}/document.dtd"/>
    </xmlcatalog>

    <!-- This will say it's generating manual.html but we override this. -->
    <!-- and write out files for individual chapters.                    -->
    <xslt basedir="${doc}"
          destdir="${help}"
          includes="manual.xml"
          extension=".html"
          style="${doc}/manual-help.xsl">
      <xmlcatalog refid="document"/>
    </xslt>

    <!-- Generate online help index.                                     -->
    <xslt in="${doc}/manual.xml"
          out="${help}/index.xml"
          style="${doc}/manual-index.xsl">
      <xmlcatalog refid="document"/>
    </xslt>

    <!-- Generate online HTML version of manual.                         -->
    <xslt in="${doc}/manual.xml"
          out="${web}/manual.html"
          style="${doc}/manual-web.xsl">
      <xmlcatalog refid="document"/>
    </xslt>

    <!-- Generate text version of manual.                                -->
    <xslt in="${doc}/manual.xml"
          out="${doc}/manual.txt"
          style="${doc}/manual-text.xsl">
      <xmlcatalog refid="document"/>
    </xslt>

    <!-- Generate local HTML version of manual.                          -->
    <xslt in="${doc}/manual.xml"
          out="${doc}/manual.html"
          style="${doc}/manual-html.xsl">
      <xmlcatalog refid="document"/>
    </xslt>
  </target>

  <!-- Generate a jar -->
  <target name="jar" depends="build, doc">

    <mkdir dir="${temp}"/>

    <!-- First expand libraries so we can place them in the jar -->
    <unjar src="${lib.hsql}" dest="${temp}">
      <patternset>
        <include name="org/**"/>
      </patternset>
    </unjar>

    <unjar src="${lib.joone}" dest="${temp}">
      <patternset>
        <include name="org/**"/>
      </patternset>
    </unjar>

    <unjar src="${lib.jython}" dest="${temp}">
      <patternset>
        <include name="org/**"/>
        <include name="com/**"/>
        <include name="jxxload_help/**"/>
      </patternset>
    </unjar>

    <unjar src="${lib.mysql}" dest="${temp}">
      <patternset>
        <include name="com/**"/>
      </patternset>
    </unjar>

    <unjar src="${lib.xml}" dest="${temp}">
      <patternset>
        <include name="com/**"/>
      </patternset>
    </unjar>

    <copy todir="${temp}">
      <fileset dir="${src}"
               includes="**/*.class, **/*.gif, **/*.png,
                         org/mov/help/doc/*.html,
                         **/*.properties,
                         org/mov/help/doc/index.xml,
                         org/mov/quote/samples/*.txt"
               excludes="org/mov/tools/*"/>
    </copy>

    <jar jarfile="venice.jar"
         basedir="${temp}"
	 manifest="${src}/MANIFEST.MF"/>

    <delete dir="${temp}"/>
  </target>

  <target name="app" depends="jar">
    <mkdir dir="${basedir}/Venice.app"/>
    <mkdir dir="${basedir}/Venice.app/Contents/"/>
    <mkdir dir="${basedir}/Venice.app/Contents/MacOS"/>
    <mkdir dir="${basedir}/Venice.app/Contents/Resources"/>
    <mkdir dir="${basedir}/Venice.app/Contents/Resources/Java"/>
    <copy file="/System/Library/Frameworks/JavaVM.framework/Versions/Current/Resources/MacOS/JavaApplicationStub/"
          todir="${basedir}/Venice.app/Contents/MacOS"/>
    <exec command="chmod 755 ${basedir}/Venice.app/Contents/MacOS/JavaApplicationStub"/>
    <copy file="Info.plist" todir="${basedir}/Venice.app/Contents/"/>
    <copy file="venice.jar" todir="${basedir}/Venice.app/Contents/Resources/Java"/>
    <copy file="icons/winged_lion.icns" todir="${basedir}/Venice.app/Contents/Resources"/>
    <exec command="/Developer/Tools/SetFile -a B ${basedir}/Venice.app"/>
  </target>
  
  <!-- Check the locale files for consistency -->
  <target name="locale">
    
    <!-- Make sure locale tool is compiled -->
    <javac srcdir="${src}"
           debug="on"
           source="1.4"
           includes="org/mov/tools/Locale.java"/>
    
    <!-- Compare each locale file to the english locale -->

    <echo>Comparing Chinese locale against English reference locale...</echo> 
    <java classname="org.mov.tools.Locale"
          dir="${src}"
          fork="yes">
      <arg value="org/mov/util/locale/venice_en.properties"/>
      <arg value="org/mov/util/locale/venice_zh.properties"/>
      <jvmarg value="-ea"/>
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${src}"/>
      </classpath>
    </java>

    <echo>Comparing French locale against English reference locale...</echo> 
    <java classname="org.mov.tools.Locale"
          dir="${src}"
          fork="yes">
      <arg value="org/mov/util/locale/venice_en.properties"/>
      <arg value="org/mov/util/locale/venice_fr.properties"/>
      <jvmarg value="-ea"/>
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${src}"/>
      </classpath>
    </java>

    <echo>Comparing Italian locale against English reference locale...</echo> 
    <java classname="org.mov.tools.Locale"
          dir="${src}"
          fork="yes">
      <arg value="org/mov/util/locale/venice_en.properties"/>
      <arg value="org/mov/util/locale/venice_it.properties"/>
      <jvmarg value="-ea"/>
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${src}"/>
      </classpath>
    </java>

    <echo>Comparing Swedish locale against English reference locale...</echo> 
    <java classname="org.mov.tools.Locale"
          dir="${src}"
          fork="yes">
      <arg value="org/mov/util/locale/venice_en.properties"/>
      <arg value="org/mov/util/locale/venice_sv.properties"/>
      <jvmarg value="-ea"/>
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${src}"/>
      </classpath>
    </java>

  </target>

  <!-- Package venice up ready for release -->
  <target name="release" depends="doc, jar, test">

    <!-- Binary Release -->

    <!-- Layout files ready for release -->
    <mkdir dir="${release}"/>
    <mkdir dir="${release}/venice-${VERSION}"/>
    <mkdir dir="${release}/venice-${VERSION}/doc/"/>
    <copy file="${doc}/manual.txt" todir="${release}/venice-${VERSION}/doc"/>
    <copy file="${doc}/manual.html" todir="${release}/venice-${VERSION}/doc"/>
    <copy file="COPYING.txt" todir="${release}/venice-${VERSION}/"/>
    <copy file="changelog.txt" todir="${release}/venice-${VERSION}/"/>
    <copy file="readme.txt" todir="${release}/venice-${VERSION}/"/>
    <copy file="venice" todir="${release}/venice-${VERSION}/"/>
    <copy file="venice.jar" todir="${release}/venice-${VERSION}/"/>

    <!-- Create release files for unix -->
    <tar tarfile="${release}/venice-${VERSION}.tar">
      <tarfileset dir="${release}/" includes="venice-${VERSION}/**"/>
    </tar>
    <gzip zipfile="${release}/venice-${VERSION}.tar.gz"
      src="${release}/venice-${VERSION}.tar"/>
    <bzip2 zipfile="${release}/venice-${VERSION}.tar.bz2"
      src="${release}/venice-${VERSION}.tar"/>
    <delete file="${release}/venice-${VERSION}.tar"/>

    <!-- Fix CRLF issues on text files for windows -->
    <fixcrlf srcdir="${release}/venice-${VERSION}/"
             eol="crlf"
             includes="*.txt"/>
    <fixcrlf srcdir="${release}/venice-${VERSION}/doc"
             eol="crlf"
             includes="*.txt"/>

    <!-- The Windows version doesn't need the venice shell script -->
    <delete file="${release}/venice-${VERSION}/venice"/>

    <!-- Create release files for windows -->
    <zip zipfile="${release}/venice-${VERSION}.zip">
      <fileset dir="${release}/" includes="venice-${VERSION}/**"/>
    </zip>

    <!-- Source Release -->
    <mkdir dir="${release}/venice-${VERSION}-src"/>
    <mkdir dir="${release}/venice-${VERSION}-src/doc/"/>
    <mkdir dir="${release}/venice-${VERSION}-src/lib/"/>
    <mkdir dir="${release}/venice-${VERSION}-src/src/"/>
    <mkdir dir="${release}/venice-${VERSION}-src/test/"/>

    <copy todir="${release}/venice-${VERSION}-src/doc/">
      <fileset dir="${doc}"
                includes="document.dtd,
                          manual.xml,
                          manual*xsl"/>
    </copy>
    <copy file="build.xml" todir="${release}/venice-${VERSION}-src/"/>
    <copy file="Info.plist" todir="${release}/venice-${VERSION}-src/"/>
    <copy file="${lib.hsql}" todir="${release}/venice-${VERSION}-src/lib/"/>
    <copy file="${lib.joone}" todir="${release}/venice-${VERSION}-src/lib/"/>
    <copy file="${lib.jython}" todir="${release}/venice-${VERSION}-src/lib/"/>
    <copy file="${lib.mysql}" todir="${release}/venice-${VERSION}-src/lib/"/>
    <copy file="${lib.xml}" todir="${release}/venice-${VERSION}-src/lib/"/>
    <copy todir="${release}/venice-${VERSION}-src/src/">
      <fileset dir="${src}"
                includes="**/*.java, **/*.gif, **/*.png,
                          org/mov/help/doc/*.html,
                          **/*.properties,
                          org/mov/help/doc/index.xml,
                          org/mov/quote/samples/*.txt,
                          MANIFEST.MF"/>
    </copy>
    <copy todir="${release}/venice-${VERSION}-src/test/">
      <fileset dir="${test}"
                includes="**/*.java"/>
    </copy>
    <copy file="COPYING.txt" todir="${release}/venice-${VERSION}-src/"/>
    <copy file="changelog.txt" todir="${release}/venice-${VERSION}-src/"/>
    <copy file="readme.txt" todir="${release}/venice-${VERSION}-src/"/>
    <copy file="venice" todir="${release}/venice-${VERSION}-src/"/>
    <tar tarfile="${release}/venice-${VERSION}-src.tar">
      <tarfileset dir="${release}/" includes="venice-${VERSION}-src/**"/>
    </tar>
    <gzip zipfile="${release}/venice-${VERSION}-src.tar.gz"
      src="${release}/venice-${VERSION}-src.tar"/>
    <delete file="${release}/venice-${VERSION}-src.tar"/>

  </target>

  <!-- Run Venice -->
  <target name="run" depends="build">
    <java classname="org.mov.main.Main"
          dir="${src}"
          fork="yes">
      <jvmarg value="-ea"/>
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${src}"/>
        <pathelement path="${lib.hsql}"/>
        <pathelement path="${lib.joone}"/>
        <pathelement path="${lib.mysql}"/>
        <pathelement path="${lib.jython}"/>
        <pathelement path="${lib.xml}"/>
      </classpath>
    </java>
  </target>

  <!-- Run Tests -->
  <target name="test" depends="build">
    <mkdir dir="${report}"/>

    <!-- Build Tests -->
    <javac srcdir="${test}"
	   debug="on"
  	   optimize="on"
	   source="1.4"
	   includes="**/*.java">
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${src}"/>
        <pathelement path="${test}"/>
        <pathelement path="${lib.hsql}"/>
        <pathelement path="${lib.joone}"/>
        <pathelement path="${lib.mysql}"/>
        <pathelement path="${lib.jython}"/>
        <pathelement path="${lib.xml}"/>
      </classpath>
    </javac>

    <!-- Run Tests -->
    <junit printsummary="on"
           fork="no"
           haltonfailure="no">
      <classpath>
        <pathelement path="${java.class.path}"/>
        <pathelement path="${src}"/>
        <pathelement path="${test}"/>
        <pathelement path="${lib.hsql}"/>
        <pathelement path="${lib.joone}"/>
        <pathelement path="${lib.mysql}"/>
        <pathelement path="${lib.jython}"/>
        <pathelement path="${lib.xml}"/>
      </classpath>
      <formatter type="plain"/>
      <batchtest todir="${report}">
        <fileset dir="${test}">
          <include name="**/*.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <!-- Package up the web page ready for deployment -->
  <target name="web" depends="api, doc, jar">

    <!-- Copy venice.jar to web page for WebStart -->
    <copy file="venice.jar" todir="${web}"/>

    <!-- Copy API files to web page -->
    <copy todir="${web}/api">
      <fileset dir="${api}"/>
    </copy>

    <!-- Make sure permissions are OK -->
    <chmod perm="u=rw,go=r">
      <fileset dir="${web}/"/>
    </chmod>

    <!-- Package it up ready for deployment -->
    <tar tarfile="${web}/web.tar">
      <tarfileset dir="${web}/" excludes="web.tar*"/>
    </tar>
    <gzip zipfile="${web}/web.tar.gz"
      src="${web}/web.tar"/>
  </target>

</project>
